generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["orderByRelation", "orderByAggregateGroup", "selectRelationCount"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Admin {
  id        Int        @id @default(autoincrement())
  loginId   String     @map("login_id") @db.VarChar(50)
  password  String     @db.VarChar(60)
  state     AdminState
  createdAt DateTime   @default(now()) @map("created_at") @db.DateTime(0)

  @@map("admin")
}

model PhoneVerification {
  id                 Int       @id @default(autoincrement())
  phone              String    @db.VarChar(11)
  verificationNumber String    @map("verification_number") @db.Char(6)
  expiredAt          DateTime? @map("expired_at") @db.DateTime(0)
  createdAt          DateTime  @default(now()) @map("created_at") @db.DateTime(0)

  @@map("phone_verification")
}

model SiteInformation {
  id          String              @id @db.VarChar(30)
  type        SiteInformationType
  description String              @db.VarChar(100)
  content     String              @db.LongText

  @@map("site_information")
}

model User {
  id        Int        @id @default(autoincrement())
  state     UserState?
  joinedAt  DateTime?  @default(now()) @map("joined_at") @db.DateTime(0)
  user_auth UserAuth[]
  user_info UserInfo?

  @@map("user")
}

model UserAuth {
  id        Int               @id @default(autoincrement())
  userId    Int               @map("user_id")
  loginType UserAuthLoginType @map("login_type")
  loginId   String            @map("login_id") @db.VarChar(150)
  password  String?           @db.VarChar(60)
  user      User              @relation(fields: [userId], references: [id])

  @@unique([loginType, loginId], name: "UQ_user_auth_1")
  @@index([userId], name: "FK_user_auth_user_id_user_id")
  @@map("user_auth")
}

model UserInfo {
  userId Int  @id @map("user_id")
  user   User @relation(fields: [userId], references: [id])

  @@map("user_info")
}

enum AdminState {
  ACTIVE
  DELETED

   @@map("admin_state")
}

enum SiteInformationType {
  ALL

   @@map("site_information_type")
}

enum UserState {
  ACTIVE
  BANNED
  DELETED

   @@map("user_state")
}

enum UserAuthLoginType {
  IDPW
  GOOGLE
  NAVER
  KAKAO
  APPLE

   @@map("user_auth_login_type")
}
